{"componentChunkName":"component---src-templates-lesson-template-js","path":"/lxc-lxd","webpackCompilationHash":"02bdcb4077276250c782","result":{"data":{"markdownRemark":{"html":"<h2 id=\"lxc\"><a href=\"#lxc\" aria-label=\"lxc permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>lxc</h2>\n<p>Before we hop into Docker, let's talk about its predecessor, <code class=\"language-text\">lxc</code>. Up until fairly recently, Docker was underpinned by <code class=\"language-text\">lxc</code>, which as you may guess stands for Linux Container. Linux Container is a low-level, flexible, and stable commandline tool for managing containers. It does a lot of what Docker does but lower level and less convenient to use. When would you use <code class=\"language-text\">lxc</code>? Probably only now and never again. <code class=\"language-text\">lxc</code> is rather basic in terms of functionality and not necessarily meant to be used by app developers.</p>\n<h1 id=\"todo-install-lxc\"><a href=\"#todo-install-lxc\" aria-label=\"todo install lxc permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TODO install lxc</h1>\n<h1 id=\"todo-lxc-example\"><a href=\"#todo-lxc-example\" aria-label=\"todo lxc example permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TODO lxc example</h1>\n<h2 id=\"lxd\"><a href=\"#lxd\" aria-label=\"lxd permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>lxd</h2>\n<p>So what is <code class=\"language-text\">lxd</code> then? <code class=\"language-text\">lxd</code> is a REST API to <code class=\"language-text\">lxc</code> which some higher level features that make using <code class=\"language-text\">lxc</code> far more pleasant and useful. It's key to note that <code class=\"language-text\">lxd</code> has a dependency on <code class=\"language-text\">lxc</code>: you cannot use <code class=\"language-text\">lxd</code> without <code class=\"language-text\">lxc</code> whereas you can just use <code class=\"language-text\">lxc</code> without <code class=\"language-text\">lxd</code>.</p>\n<p>We're not going to dive too much here into <code class=\"language-text\">lxd</code>: its purpose is different from Docker and we're not chasing this use case. In the words of one of the <a href=\"https://stgraber.org/2016/03/11/lxd-2-0-introduction-to-lxd-112/\">LXC/LXD core maintainers</a>:</p>\n<blockquote>\n<p>LXD focuses on system containers, also called infrastructure containers. That is, a LXD container runs a full Linux system, exactly as it would be when run on metal or in a VM.</p>\n</blockquote>\n<blockquote>\n<p>Those containers will typically be long running and based on a clean distribution image. Traditional configuration management tools and deployment tools can be used with LXD containers exactly as you would use them for a VM, cloud instance or physical machine.</p>\n</blockquote>\n<blockquote>\n<p>In contrast, Docker focuses on ephemeral, stateless, minimal containers that wonâ€™t typically get upgraded or re-configured but instead just be replaced entirely. That makes Docker and similar projects much closer to a software distribution mechanism than a machine management tool.</p>\n</blockquote>\n<p>As you can see by that last line, we're much more interested in Docker's purpose than <code class=\"language-text\">lxd</code>'s. Let's move on to that.</p>","frontmatter":{"path":"/lxc-lxd","title":"lxc & lxd","order":2}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":1,"path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":1,"path":"/what-are-containers","title":"What Are Containers?"}}},{"node":{"frontmatter":{"order":2,"path":"/lxc-lxd","title":"lxc & lxd"}}},{"node":{"frontmatter":{"order":2,"path":"/docker","title":"Intro to Docker"}}},{"node":{"frontmatter":{"order":3,"path":"/dockerfile","title":"The Dockerfile"}}},{"node":{"frontmatter":{"order":4,"path":"/going-to-production","title":"Going to Production"}}},{"node":{"frontmatter":{"order":5,"path":"/static-assets-project","title":"Static Assets Project"}}},{"node":{"frontmatter":{"order":6,"path":"/volumes-and-bind-mounts","title":"Volumes and Bind Mounts"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}